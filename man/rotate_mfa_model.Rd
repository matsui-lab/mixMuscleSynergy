% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rotation.R
\name{rotate_mfa_model}
\alias{rotate_mfa_model}
\title{Post-hoc Rotation for an MFA Model}
\usage{
rotate_mfa_model(
  mfa_fit,
  rotation = c("varimax"),
  rotate_scores = FALSE,
  cluster_ids = NULL
)
}
\arguments{
\item{mfa_fit}{A fitted MFA model, typically returned by \code{mfa_em_fit} or
\code{select_optimal_K_r_mfa()$best_model_info$model}, containing:
\itemize{
  \item \code{Lambda[[k]]}: (M x r) factor loadings
  \item \code{factor_scores[[i]]}: optional (T_i x r) factor scores
  \item \code{z[i]}: cluster assignments
}}

\item{rotation}{A string specifying the rotation method. Currently supports \code{"varimax"}.}

\item{rotate_scores}{Logical; if TRUE, also rotate the factor scores if present.}

\item{cluster_ids}{A numeric vector specifying which cluster IDs to rotate. Defaults to all.}
}
\value{
A new MFA model object, with rotated \code{Lambda} (and \code{factor_scores} if requested).
  Other fields are unchanged.

A new MFA model object with rotated loadings (and factor scores if requested).
}
\description{
Applies a chosen rotation (e.g., "varimax") to each cluster's loading matrix
(\code{Lambda[[k]]}). Optionally, also rotates the factor scores in
\code{factor_scores[[i]]} if they exist and \code{rotate_scores=TRUE}.
}
\details{
- Rotation does not change log-likelihood or BIC, just reorients factors for interpretability.
- If \code{factor_scores} is missing and \code{rotate_scores=TRUE}, you can either skip or error.

In R's \code{stats::varimax()}, the matrix rows are interpreted as variables, and
the columns as factors. If \code{Lambda_k} is already \code{(M x r)}, then passing it
directly works as intended (no transpose). The returned \code{loadings} is the same shape,
and \code{rotmat} is \code{(r x r)}, which can also be applied to the factor scores
(dimension \code{(T_i x r)}).
}
