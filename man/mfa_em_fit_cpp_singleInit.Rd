% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfa_em_fit.R
\name{mfa_em_fit_cpp_singleInit}
\alias{mfa_em_fit_cpp_singleInit}
\title{Single-Run Mixture Factor Analysis with a Preset Initial Assignment}
\usage{
mfa_em_fit_cpp_singleInit(
  list_of_data,
  K,
  r,
  z_init,
  max_iter = 50,
  nIterFA = 20,
  tol = 0.001
)
}
\arguments{
\item{list_of_data}{A list of \code{(T_i x M)} matrices, one for each subject.}

\item{K}{Number of clusters.}

\item{r}{Factor dimension in each cluster.}

\item{z_init}{An integer vector of length \code{N} (where \code{N=length(list_of_data)}),
giving the initial cluster label (1..K) for each subject.}

\item{max_iter}{Maximum EM iterations in C++.}

\item{nIterFA}{Number of sub-iterations for the factor analyzer update in C++.}

\item{tol}{Convergence tolerance used in C++.}
}
\value{
A list with elements:
\describe{
  \item{\code{z}}{Hard cluster assignments, length \code{N}.}
  \item{\code{pi}}{Cluster mixing proportions, length \code{K}.}
  \item{\code{mu}}{List of length \code{K}, each a mean vector (\code{M x 1}).}
  \item{\code{Lambda}}{List of length \code{K}, each an \code{M x r} factor loading matrix.}
  \item{\code{Psi}}{List of length \code{K}, each an \code{M x M} diagonal noise matrix.}
  \item{\code{logLik}}{Final log-likelihood computed in R.}
  \item{\code{resp}}{An \code{N x K} matrix of responsibilities.}
}
}
\description{
This helper function calls the C++ routine \code{mfaTimeseriesCpp()} with a user-specified
cluster assignment (\code{z_init}) and then computes the final log-likelihood and
responsibilities in R.
}
\examples{
\dontrun{
# Suppose we have list_of_data, K=3, r=2:
z_init <- sample.int(3, size=length(list_of_data), replace=TRUE)
fit_one <- mfa_em_fit_cpp_singleInit(list_of_data, K=3, r=2,
                                     z_init=z_init)
fit_one$logLik
}

}
