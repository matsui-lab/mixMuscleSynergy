% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rotation.R
\name{compute_factor_scores_mfa}
\alias{compute_factor_scores_mfa}
\title{Compute Factor Scores for All Subjects in an MFA Model}
\usage{
compute_factor_scores_mfa(mfa_fit, list_of_data)
}
\arguments{
\item{mfa_fit}{A fitted MFA model, typically from \code{mfa_em_fit()} or
\code{select_optimal_K_r_mfa()$best_model_info$model}, containing:
\itemize{
  \item \code{z[i]}: cluster assignments,
  \item \code{Lambda[[k]]}, \code{Psi[[k]]}, \code{mu[[k]]} for each cluster k.
}}

\item{list_of_data}{The same list of data \code{(T_i x M)} used to fit the model.}
}
\value{
The same \code{mfa_fit} object, but with a new element \code{factor_scores}
  (a list of length \code{N}), where each \code{factor_scores[[i]]} is a
  \code{(T_i x r)} matrix of factor scores for subject \code{i}.
}
\description{
Given a fitted MFA model (with \code{z, mu, Lambda, Psi} for each cluster),
this function computes the posterior factor scores \code{Z_i(t)} for each subject \code{i}
and stores them in \code{model$factor_scores[[i]]}.
}
\details{
Internally, it calls \code{\link{factor_scores_mfa_single}} for each subject,
using that subject's assigned cluster \code{k = z[i]}.
}
\examples{
\dontrun{
mfa_fit <- compute_factor_scores_mfa(mfa_fit, list_of_data)
# Now mfa_fit$factor_scores[[i]] is available for each subject i
}
}
