% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mpca_em_fit.R
\name{mixture_pca_em_fit}
\alias{mixture_pca_em_fit}
\title{Fit a Mixture PCA Model (Using mpcaTimeseriesCpp)}
\usage{
mixture_pca_em_fit(
  list_of_data,
  K,
  r,
  max_iter = 50,
  nIterPCA = 20,
  tol = 0.001,
  method = "EM"
)
}
\arguments{
\item{list_of_data}{A list of matrices (each \code{T_i x M}).}

\item{K}{Number of clusters.}

\item{r}{Number of principal components.}

\item{max_iter}{Maximum EM iterations for the C++ routine.}

\item{nIterPCA}{Sub-iterations for updating each cluster's PPCA parameters (\code{pcaEMupdateCpp}).}

\item{tol}{Convergence tolerance for \code{mpcaTimeseriesCpp}.}

\item{method}{Either \code{"EM"} or \code{"closed_form"}, indicating which cluster-level routine
to use inside C++ (\code{pcaEMupdateCpp} or \code{pcaClosedFormCpp}).}
}
\value{
A list with elements:
\item{z}{Hard cluster assignments (1..K).}
\item{pi}{Mixing proportions.}
\item{mu}{List of length \code{K}, each a mean vector.}
\item{P}{List of length \code{K}, each an \code{(M x r)} matrix of principal directions.}
\item{D}{List of length \code{K}, each an \code{(r x r)} diagonal matrix. 
  (For now, we create a trivial diagonal from the norm of \code{W}'s columns; see details.)}
\item{Psi}{List of length \code{K}, each an \code{(M x M)} diagonal matrix representing residual noise \eqn{\sigma^2 I}.}
\item{logLik}{Final log-likelihood over all data.}
\item{resp}{An \code{N x K} matrix of mixture responsibilities in R.}
}
\description{
This function calls the C++ function \code{mpcaTimeseriesCpp()} to perform a
Mixture PCA (PPCA) EM algorithm for fixed \code{K} and \code{r}. 
After that, it computes the final log-likelihood and responsibilities in R,
returning a structure close to the original "simple" approach with \code{(P, D, Psi, ...)}.
}
\details{
Internally calls \code{mpcaTimeseriesCpp()} which performs an EM loop at the cluster level, 
grouping time-series that belong to each cluster (hard assignment). In each M-step, it either uses
\code{pcaEMupdateCpp} (if \code{method="EM"}) or \code{pcaClosedFormCpp} (if \code{method="closed_form"})
to get a single-cluster PPCA solution (mean, W, sigma2). In this R function, we interpret
\code{W} as \code{P}, store an approximate diagonal matrix \code{D}, and create a diagonal
\code{Psi} matrix from \code{sigma2 I}. We also compute final log-likelihood and responsibilities
by evaluating the mixture model in R.

If you need a more precise \code{D} (like exact singular values) or different structure, adjust the code below.
}
\examples{
\dontrun{
# Suppose we have a list_of_data with M=8 columns, K=3 clusters, r=2 PCs:
fit <- mixture_pca_em_fit(list_of_data, K=3, r=2, max_iter=30, nIterPCA=10, tol=1e-4)
print(fit$logLik)
head(fit$z)
}

}
