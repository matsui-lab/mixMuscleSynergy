% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flip.R
\name{align_factor_signs_mfa}
\alias{align_factor_signs_mfa}
\title{Align (Flip) Factor Signs in an MFA Model}
\usage{
align_factor_signs_mfa(mfa_fit, method = c("max_abs"), cluster_ids = NULL)
}
\arguments{
\item{mfa_fit}{A fitted MFA model (with \code{Lambda[[k]]}, \code{factor_scores[[i]]}, \code{z}, etc.).}

\item{method}{A string specifying how to choose the sign. Currently only
\code{"max_abs"} is implemented, which flips the column if the variable with
the largest absolute loading is negative.}

\item{cluster_ids}{Which clusters to process. Defaults to all.}
}
\value{
The same \code{mfa_fit} object, but with possibly flipped signs in
  \code{Lambda} columns and \code{factor_scores} columns.
}
\description{
After running \code{\link{rotate_mfa_model}} or any rotation, each factor's
sign can be arbitrary. This function enforces a rule such as:
"The variable with the largest absolute loading in each factor must be positive."
Then, if that factor's column is flipped, we also flip the corresponding column
in the factor scores, to keep the model consistent.
}
\details{
- For each cluster \code{k}, we loop over each factor (column). We find the row
  index \code{i_max} that has the largest absolute loading. If
  \code{Lambda[k][i_max, factor] < 0}, we multiply that entire column by \code{-1}.
- If \code{factor_scores} is present, we also multiply the corresponding column
  in each subject's factor score by \code{-1} to maintain consistency.
- This doesn't change the model fit or BIC, just the sign convention.
}
